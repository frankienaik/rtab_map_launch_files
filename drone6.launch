<launch>

<!-- there is a wrong mapping, when closing the map inside rviz, it does not show the hector -->
<!-- probably change inside the .rviz -->
<!-- check rtabmap_ros pkg for rtab_map.launch and change from there -->


  <!-- HECTOR MAPPING VERSION: use this with ROS bag demo_mapping_no_odom.bag generated  -->
  <!--                         from demo_mapping.bag with:                               -->
  <!-- rosbag filter demo_mapping.bag demo_mapping_no_odom.bag 'topic != "/tf" or topic == "/tf" and m.transforms[0].header.frame_id != "/odom"' -->
  <!-- WARNING : Database is automatically deleted on each startup                       -->
  <!--           See "delete_db_on_start" option below...                                -->
  
  <!-- Choose visualization -->
  <arg name="rviz" default="true" />
  <arg name="rtabmapviz" default="false" />
  
  <!-- Choose hector_slam or icp_odometry for odometry -->
  <arg name="hector" default="false" />
  
  <!-- sim time for convenience, if playing a rosbag -->
  <arg name="use_sim_time"            default="false"/>
  <param if="$(arg use_sim_time)" name="use_sim_time" value="true"/>
  


  <node unless="$(arg use_sim_time)" pkg="tf" type="static_transform_publisher" name="base_footprint_to_laser" 
    args="0.0 0.0 0.0 0.0 0.0 0.0 /base_footprint /laser 100" />

  
  <node unless="$(arg use_sim_time)" pkg="tf" type="static_transform_publisher" name="base_footprint_to_camera_link" 
    args="0.0 0.0 1.0 3.14159 0.0 0.0 /base_footprint /camera_link 100" />
<!--
  <node if="$(arg hector)" pkg="tf" type="static_transform_publisher" name="hector_map_to_base_footprint" 
    args="0.0 0.0 0.0 0.0 0.0 0.0 /hector_map /base_footprint 100" />
-->
  
  
  <node if="$(arg hector)" pkg="tf" type="static_transform_publisher" name="scanmatcher_to_base_footprint" 
    args="0.0 0.0 0.0 0.0 0.0 0.0 /scanmatcher_frame /base_footprint 100" />
    
  <node if="$(arg hector)" pkg="tf" type="static_transform_publisher" name="hector_map_to_scanmatcher" 
    args="0.0 0.0 0.0 0.0 0.0 0.0 /hector_map /scanmatcher_frame 100" />

  <!-- Odometry from laser scans -->
  <!-- If argument "hector" is true, we use Hector mapping to generate odometry for us -->
  <node if="$(arg hector)" pkg="hector_mapping" type="hector_mapping" name="hector_mapping" output="screen">
    
    <!-- Frame names -->
    <param name="map_frame" value="hector_map" />
    <param name="base_frame" value="base_footprint" />
    <param name="odom_frame" value="odom" />
    
    <!-- Tf use -->
    <param name="pub_map_odom_transform" value="false"/>
    <param name="pub_map_scanmatch_transform" value="true"/>
    <param name="pub_odometry" value="true"/>
    
    <!-- Map size / start point -->
    <param name="map_resolution" value="0.050"/>
    <param name="map_size" value="2048"/>
    <param name="map_multi_res_levels" value="2" />
    
    <!-- Map update parameters -->
    <param name="map_update_angle_thresh" value="0.06" />
    
    <!-- Advertising config --> 
<!--
    <param name="scan_topic" value="/jn0/base_scan"/>
-->

    <param name="scan_topic" value="/scan"/>


    <!-- added -->
    
  </node>
  
  <!-- If argument "hector" is false, we use rtabmap's icp odometry to generate odometry for us -->
  <node unless="$(arg hector)" pkg="rtabmap_ros" type="icp_odometry" name="icp_odometry" output="screen" >
<!--
     <remap from="scan"      to="/jn0/base_scan"/>
-->    
     <remap from="scan"      to="/scan"/>

     <remap from="odom"      to="/scanmatch_odom"/>
     <remap from="odom_info"      to="/rtabmap/odom_info"/>
	  
     <param name="frame_id"        type="string" value="base_footprint"/>   

     <remap from="rgb/image"       to="/camera/color/image_raw"/>
     <remap from="depth/image"     to="/camera/aligned_depth_to_color/image_raw"/>
     <remap from="rgb/camera_info" to="/camera/color/camera_info"/>
  	
	 <param name="rgb/image_transport"   type="string" value="compressed"/>
	 <param name="depth/image_transport" type="string" value="compressedDepth"/>     
     
     <param name="Icp/PointToPlane"  type="string" value="true"/>
     <param name="Icp/VoxelSize"     type="string" value="0.05"/>
     <param name="Icp/Epsilon"       type="string" value="0.001"/>
     <param name="Icp/PointToPlaneK"  type="string" value="5"/>
     <param name="Icp/PointToPlaneRadius"  type="string" value="0.3"/>
     <param name="Icp/MaxCorrespondenceDistance" type="string" value="0.1"/>
     <param name="Icp/PM"             type="string" value="true"/> 
     <param name="Icp/PMOutlierRatio" type="string" value="0.95"/>
     <param name="Odom/Strategy"        type="string" value="0"/>
     <param name="Odom/GuessMotion"     type="string" value="true"/>
     <param name="Odom/ResetCountdown"  type="string" value="0"/>
     <param name="Odom/ScanKeyFrameThr"  type="string" value="0.9"/>     
     <!--
     <param unless="$(arg use_sim_time)" name="Icp/PointToPlane"  type="string" value="true"/>
     <param unless="$(arg use_sim_time)" name="Icp/VoxelSize"     type="string" value="0.05"/>
     <param unless="$(arg use_sim_time)" name="Icp/Epsilon"       type="string" value="0.001"/>
     <param unless="$(arg use_sim_time)" name="Icp/PointToPlaneK"  type="string" value="5"/>
     <param unless="$(arg use_sim_time)" name="Icp/PointToPlaneRadius"  type="string" value="0.3"/>
     <param unless="$(arg use_sim_time)" name="Icp/MaxCorrespondenceDistance" type="string" value="0.1"/>
     <param unless="$(arg use_sim_time)" name="Icp/PM"             type="string" value="true"/> 
     <param unless="$(arg use_sim_time)" name="Icp/PMOutlierRatio" type="string" value="0.95"/>
     <param unless="$(arg use_sim_time)" name="Odom/Strategy"        type="string" value="0"/>
     <param unless="$(arg use_sim_time)" name="Odom/GuessMotion"     type="string" value="true"/>
     <param unless="$(arg use_sim_time)" name="Odom/ResetCountdown"  type="string" value="0"/>
     <param unless="$(arg use_sim_time)" name="Odom/ScanKeyFrameThr"  type="string" value="0.9"/>
     -->
  </node>

  <group ns="rtabmap">
    <node pkg="nodelet" type="nodelet" name="rgbd_sync" args="standalone rtabmap_ros/rgbd_sync" output="screen">
      <!--<remap from="rgb/image"       to="/camera/rgb/image_rect_color"/>
      <remap from="depth/image"     to="/camera/depth_registered/image_raw"/>
      <remap from="rgb/camera_info" to="/camera/rgb/camera_info"/>-->

      <remap from="rgb/image"       to="/camera/color/image_raw"/>
      <remap from="depth/image"     to="/camera/aligned_depth_to_color/image_raw"/>
      <remap from="rgb/camera_info" to="/camera/color/camera_info"/>
      
      <!-- <remap from="rgb/image"       to="/data_throttled_image"/>
      <remap from="depth/image"     to="/data_throttled_image_depth"/>
      <remap from="rgb/camera_info" to="/data_throttled_camera_info"/> -->
      
      <param name="rgb/image_transport"   type="string" value="compressed"/>
      <param name="depth/image_transport" type="string" value="compressedDepth"/>
      <remap from="rgbd_image"      to="rgbd_image"/> <!-- output -->
    
    <!-- Should be true for not synchronized camera topics 
           (e.g., false for kinectv2, zed, realsense, true for xtion, kinect360)-->
      <param name="approx_sync"       value="true"/> 
    </node>
    
    <!-- SLAM -->
    <!-- args: "delete_db_on_start" and "udebug" -->
    <node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen" args="--delete_db_on_start">
      <param name="frame_id" type="string" value="base_footprint"/>
	
      <param name="subscribe_depth" type="bool" value="true"/>
      <param name="subscribe_rgbd"  type="bool" value="true"/>
      <param name="subscribe_scan"  type="bool" value="true"/>
      <!--  name="subscribe_scan_cloud"  type="bool" value="true"/> -->
	
	
	  <!-- THINGS THAT ARE ADDED -->
	  <param name="wait_for_transform" type="bool" value="true"/>
	  <remap from="rgb/image"       to="/camera/color/image_raw"/>	  
	  <remap from="depth/image"     to="/camera/aligned_depth_to_color/image_raw"/>
	  <remap from="rgb/camera_info" to="/camera/color/camera_info"/>
  	
	  <param name="rgb/image_transport"   type="string" value="compressed"/>
	  <param name="depth/image_transport" type="string" value="compressedDepth"/>
	  
	  <param name="odom_frame_id"            type="string" value="odom"/>
	  <param name="odom_tf_linear_variance"  type="double" value="0.001"/>
	  <param name="odom_tf_angular_variance" type="double" value="0.001"/>
<!--
      <remap from="scan" to="/jn0/base_scan"/>
-->
      <remap from="scan" to="/scan"/>

      <!-- <remap from="scan_cloud" to="/jn0/base_scan"/> -->
      
      <!--<remap from="odom" to="/base_controller/odom"/>-->
      <!--<remap from="scan" to="/base_scan"/>-->
      <remap from="rgbd_image" to="rgbd_image"/>

      <param name="queue_size" type="int" value="10"/>

      <!-- As hector doesn't provide compatible covariance in the odometry topic, don't use the topic and fix the covariance -->
      
      
      <remap unless="$(arg hector)" from="odom" to="/scanmatch_odom"/>
      <param unless="$(arg hector)" name="subscribe_odom_info" type="bool" value="true"/>
	
      <!-- RTAB-Map's parameters -->
      <param name="Reg/Strategy"       type="string" value="2"/>    <!-- 0=Visual, 1=ICP, 2=Visual+ICP -->
      <param name="Reg/Force3DoF"      type="string" value="true"/>
      <param name="RGBD/ProximityBySpace"      type="string" value="false"/>
      
      <param name="RGBD/NeighborLinkRefining" type="string" value="true"/>
      <param name="RGBD/AngularUpdate"        type="string" value="0.01"/>
      <param name="RGBD/LinearUpdate"         type="string" value="0.01"/>
      <param name="RGBD/OptimizeFromGraphEnd" type="string" value="false"/>
      <param name="Grid/FromDepth"            type="string" value="false"/>
 overlap to accept loop closure -->
      <!-- ICP parameters -->
      <!-- <param name="Icp/VoxelSize"                 type="string" value="0.05"/>
      <param name="Icp/MaxCorrespondenceDistance" type="string" value="0.1"/> -->

      <!-- ADDED -->
            

    </node>
    
    <!-- Visualisation RTAB-Map -->
    <node if="$(arg rtabmapviz)" pkg="rtabmap_ros" type="rtabmapviz" name="rtabmapviz" args="-d $(find rtabmap_ros)/launch/config/rgbd_gui.ini" output="screen">
      <param name="subscribe_rgbd"      type="bool" value="true"/>
      <param name="subscribe_laserScan" type="bool" value="true"/>
      <param name="frame_id"            type="string" value="base_footprint"/>
    
<!--
      <remap from="scan"            to="/jn0/base_scan"/>
-->

      <remap from="scan"            to="/scan"/>

      <!-- As hector doesn't provide compatible covariance in the odometry topic -->
      <param if="$(arg hector)" name="odom_frame_id" type="string" value="hector_map"/>

      <remap unless="$(arg hector)" from="odom" to="/scanmatch_odom"/>
      <param unless="$(arg hector)" name="subscribe_odom_info" type="bool" value="true"/>
    </node>
  
  </group>
  
  <!-- Visualisation RVIZ -->


  <node if="$(arg rviz)" pkg="rviz" type="rviz" name="rviz" args="-d $(find rtabmap_ros)/launch/config/demo_frankie_mapping.rviz" output="screen"/>


   <node pkg="nodelet" type="nodelet" name="points_xyzrgb" args="standalone rtabmap_ros/point_cloud_xyzrgb">
    <remap from="rgbd_image"      to="/rtabmap/rgbd_image"/>
    <remap from="cloud"           to="voxel_cloud" />

    <param name="voxel_size" type="double" value="0.01"/>
  </node>

<!--
   <node pkg="nodelet" type="nodelet" name="points_xyzrgb" args="load rtabmap_ros/point_cloud_xyzrgb standalone_nodelet">
   
   
        <remap from="rgb/image"       to="data_odom_sync/image"/>
        <remap from="depth/image"     to="data_odom_sync/depth"/>
        <remap from="rgb/camera_info" to="data_odom_sync/camera_info"/>
        <remap from="cloud"           to="voxel_cloud" />
        <param name="voxel_size"      type="double" value="0.01"/>
   </node>
-->
</launch>
